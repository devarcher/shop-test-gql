{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Orders from \"./Orders\";\nimport { useQuery, useMutation } from \"react-apollo\";\nimport { GET_ORDERS, REMOVE_ORDER_TAGS } from \"../queries/queries\";\nimport { getCheckoutMethod } from \"../utils/getCustomAttributes\";\n\nconst GetOrders = () => {\n  // Apollo data\n  const {\n    data\n  } = useQuery(GET_ORDERS, {\n    pollInterval: 5000\n  });\n  const [removeOrderTags] = useMutation(REMOVE_ORDER_TAGS);\n  console.log(\"Get Orders\", data);\n\n  const synchTagsWithCustomAttributes = () => {};\n\n  if (data && data !== undefined) {\n    data.orders.edges.map(edge => {\n      const tagsPickupMethod = edge.node.tags.find(method => method === \"Pickup Order\");\n      const tagsDeliveryMethod = edge.node.tags.find(method => method === \"Local Delivery Order\");\n\n      if (getCheckoutMethod(edge) === \"delivery\" && tagsPickupMethod !== undefined) {\n        removeOrderTags({\n          variables: {\n            id: edge.node.id,\n            tags: \"Pickup Order\"\n          }\n        });\n      }\n\n      if (getCheckoutMethod(edge) === \"pickup\" && tagsDeliveryMethod !== undefined) {\n        removeOrderTags({\n          variables: {\n            id: edge.node.id,\n            tags: \"Local Delivery Order\"\n          }\n        });\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Orders, {\n    data: data\n  }));\n};\n\nexport default GetOrders;","map":{"version":3,"sources":["/home/kiro/Documents/Gemini/shopify-Test/shopify-test-setup/components/GetOrders.js"],"names":["Orders","useQuery","useMutation","GET_ORDERS","REMOVE_ORDER_TAGS","getCheckoutMethod","GetOrders","data","pollInterval","removeOrderTags","console","log","synchTagsWithCustomAttributes","undefined","orders","edges","map","edge","tagsPickupMethod","node","tags","find","method","tagsDeliveryMethod","variables","id"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,oBAA9C;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWN,QAAQ,CAACE,UAAD,EAAa;AACpCK,IAAAA,YAAY,EAAE;AADsB,GAAb,CAAzB;AAIA,QAAM,CAACC,eAAD,IAAoBP,WAAW,CAACE,iBAAD,CAArC;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,IAA1B;;AAEA,QAAMK,6BAA6B,GAAG,MAAM,CAE3C,CAFD;;AAIA,MAAIL,IAAI,IAAIA,IAAI,KAAKM,SAArB,EAAgC;AAC9BN,IAAAA,IAAI,CAACO,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,IAAU;AAC9B,YAAMC,gBAAgB,GAAGD,IAAI,CAACE,IAAL,CAAUC,IAAV,CAAeC,IAAf,CACtBC,MAAD,IAAYA,MAAM,KAAK,cADA,CAAzB;AAGA,YAAMC,kBAAkB,GAAGN,IAAI,CAACE,IAAL,CAAUC,IAAV,CAAeC,IAAf,CACxBC,MAAD,IAAYA,MAAM,KAAK,sBADE,CAA3B;;AAIA,UACEjB,iBAAiB,CAACY,IAAD,CAAjB,KAA4B,UAA5B,IACAC,gBAAgB,KAAKL,SAFvB,EAGE;AACAJ,QAAAA,eAAe,CAAC;AACde,UAAAA,SAAS,EAAE;AACTC,YAAAA,EAAE,EAAER,IAAI,CAACE,IAAL,CAAUM,EADL;AAETL,YAAAA,IAAI,EAAE;AAFG;AADG,SAAD,CAAf;AAMD;;AAED,UACEf,iBAAiB,CAACY,IAAD,CAAjB,KAA4B,QAA5B,IACAM,kBAAkB,KAAKV,SAFzB,EAGE;AACAJ,QAAAA,eAAe,CAAC;AACde,UAAAA,SAAS,EAAE;AACTC,YAAAA,EAAE,EAAER,IAAI,CAACE,IAAL,CAAUM,EADL;AAETL,YAAAA,IAAI,EAAE;AAFG;AADG,SAAD,CAAf;AAMD;AACF,KA/BD;AAgCD;;AAED,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEb;AAAd,IADF,CADF;AAKD,CAtDD;;AAwDA,eAAeD,SAAf","sourcesContent":["import Orders from \"./Orders\";\nimport { useQuery, useMutation } from \"react-apollo\";\nimport { GET_ORDERS, REMOVE_ORDER_TAGS } from \"../queries/queries\";\nimport { getCheckoutMethod } from \"../utils/getCustomAttributes\";\n\nconst GetOrders = () => {\n  // Apollo data\n  const { data } = useQuery(GET_ORDERS, {\n    pollInterval: 5000,\n  });\n\n  const [removeOrderTags] = useMutation(REMOVE_ORDER_TAGS);\n\n  console.log(\"Get Orders\", data);\n\n  const synchTagsWithCustomAttributes = () => {\n\n  }\n\n  if (data && data !== undefined) {\n    data.orders.edges.map((edge) => {\n      const tagsPickupMethod = edge.node.tags.find(\n        (method) => method === \"Pickup Order\"\n      );\n      const tagsDeliveryMethod = edge.node.tags.find(\n        (method) => method === \"Local Delivery Order\"\n      );\n\n      if (\n        getCheckoutMethod(edge) === \"delivery\" &&\n        tagsPickupMethod !== undefined\n      ) {\n        removeOrderTags({\n          variables: {\n            id: edge.node.id,\n            tags: \"Pickup Order\",\n          },\n        });\n      }\n\n      if (\n        getCheckoutMethod(edge) === \"pickup\" &&\n        tagsDeliveryMethod !== undefined\n      ) {\n        removeOrderTags({\n          variables: {\n            id: edge.node.id,\n            tags: \"Local Delivery Order\",\n          },\n        });\n      }\n    });\n  }\n\n  return (\n    <>\n      <Orders data={data} />\n    </>\n  );\n};\n\nexport default GetOrders;\n"]},"metadata":{},"sourceType":"module"}
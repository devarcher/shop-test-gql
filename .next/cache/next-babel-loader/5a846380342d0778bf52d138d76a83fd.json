{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation tagsRemove($id: ID!, $tags: [String!]!) {\\n    tagsRemove(id: $id, tags: $tags) {\\n      node {\\n        id\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation tagsAdd($id: ID!, $tags: [String!]!) {\\n    tagsAdd(id: $id, tags: $tags) {\\n      node {\\n        id\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery ($tag: String!) {\\n  shop {\\n    id\\n    name\\n  }\\n    orders(first: 30, query:$tag) {\\n      edges {\\n        node {\\n          id\\n          name\\n          displayFulfillmentStatus\\n          note\\n          createdAt\\n          tags\\n          lineItems(first: 10) {\\n            edges {\\n              node {\\n                title\\n                quantity\\n              }\\n            }\\n          }\\n          customer {\\n            id\\n            firstName\\n            lastName\\n            email\\n            phone\\n          }\\n          customAttributes {\\n            key\\n            value\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nexport var GET_ORDERS = gql(_templateObject());\nexport var ADD_ORDER_TAGS = gql(_templateObject2());\nexport var REMOVE_ORDER_TAGS = gql(_templateObject3());","map":{"version":3,"sources":["/home/kiro/Documents/Gemini/shopify-Test/shopify-test-setup/queries/queries.js"],"names":["gql","GET_ORDERS","ADD_ORDER_TAGS","REMOVE_ORDER_TAGS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,UAAU,GAAGD,GAAH,mBAAhB;AAwCP,OAAO,IAAME,cAAc,GAAGF,GAAH,oBAApB;AAeP,OAAO,IAAMG,iBAAiB,GAAGH,GAAH,oBAAvB","sourcesContent":["import gql from \"graphql-tag\";\n\nexport const GET_ORDERS = gql`\nquery ($tag: String!) {\n  shop {\n    id\n    name\n  }\n    orders(first: 30, query:$tag) {\n      edges {\n        node {\n          id\n          name\n          displayFulfillmentStatus\n          note\n          createdAt\n          tags\n          lineItems(first: 10) {\n            edges {\n              node {\n                title\n                quantity\n              }\n            }\n          }\n          customer {\n            id\n            firstName\n            lastName\n            email\n            phone\n          }\n          customAttributes {\n            key\n            value\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER_TAGS = gql`\n  mutation tagsAdd($id: ID!, $tags: [String!]!) {\n    tagsAdd(id: $id, tags: $tags) {\n      node {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n  }\n`;\n\nexport const REMOVE_ORDER_TAGS = gql`\n  mutation tagsRemove($id: ID!, $tags: [String!]!) {\n    tagsRemove(id: $id, tags: $tags) {\n      node {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}
{
  "ast": null,
  "code": "import React from \"react\";\nvar __jsx = React.createElement;\nimport react, { useState } from \"react\"; // import _ from \"lodash\";\n\nimport { getCheckoutMethod, getDeliveryDates, getDeliveryTimes, getPickupTimes, getOrderName, getFulFillmentStatus, getCustomerFullName, getCustomerEmail, getCustomerNote, getOrderCreationTime } from \"../utils/getCustomAttributes\"; // const ORDER_UPDATE = gql`\n//   mutation orderUpdate($input: OrderInput!) {\n//     orderUpdate(input: $input) {\n//       order {\n//         id\n//       }\n//       userErrors {\n//         field\n//         message\n//       }\n//     }\n//   }\n// `;\n\nvar Orders = function Orders(props) {\n  var data = props.data;\n  console.log(\"Orders Edge\", data);\n\n  var _useState = useState(\"\"),\n      method = _useState[0],\n      setMethod = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      orderStatus = _useState2[0],\n      setOrderStatus = _useState2[1];\n\n  var handleStatus = function handleStatus(e) {\n    e.preventDefault();\n    setOrderStatus(e.target.value);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"hi\"));\n};\n\nexport default Orders; // let input;\n// const [orderUpdate, { data }] = useMutation(ORDER_UPDATE);\n// e.preventDefault();\n// orderUpdate({ variables: { input: input.value } });\n// input.value = \"\";\n// // Local State\n// const [timeStampArray, setTimeStampArray] = useState([]);\n// // const [orderedArray, setOrderedArray] = useState([]);\n// useEffect(() => {\n//   const dateTimeArray = [];\n//   if(data !== undefined) {\n//     data.orders.edges.map(edge => {\n//       const deliveryDate = getDeliveryDates(edge);\n//       const deliveryTime = getDeliveryTimes(edge);\n//       if(deliveryTime !== undefined) {\n//         const processTimesArray = deliveryTime.split(' ');\n//         const deliveryWindowParse = processTimesArray.slice(0, 2)\n//         const deliveryDueTime = deliveryWindowParse.join(' ')\n//         dateTimeArray.push(new Date(`${deliveryDate} ${deliveryDueTime}`).toISOString())\n//       }\n//       dateTimeArray.sort();\n//       setTimeStampArray(dateTimeArray)\n//     })\n//   }\n// }, [method])\n// useEffect(() => {\n//   // setOrderedArray(orderedArray => [...orderedArray, timeStampArray])\n//   console.log(\"timestamparray\", timeStampArray)\n// }, [timeStampArray])\n// // console.log(\"ordered Array\", orderedArray)\n// const updateStatus = () => {\n//   console.log('hi')\n// }",
  "map": {
    "version": 3,
    "sources": [
      "/home/kiro/Documents/Gemini/shopify-Test/shopify-test-setup/components/Orders.js"
    ],
    "names": [
      "react",
      "useState",
      "getCheckoutMethod",
      "getDeliveryDates",
      "getDeliveryTimes",
      "getPickupTimes",
      "getOrderName",
      "getFulFillmentStatus",
      "getCustomerFullName",
      "getCustomerEmail",
      "getCustomerNote",
      "getOrderCreationTime",
      "Orders",
      "props",
      "data",
      "console",
      "log",
      "method",
      "setMethod",
      "orderStatus",
      "setOrderStatus",
      "handleStatus",
      "e",
      "preventDefault",
      "target",
      "value"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,cAJF,EAKEC,YALF,EAMEC,oBANF,EAOEC,mBAPF,EAQEC,gBARF,EASEC,eATF,EAUEC,oBAVF,QAWO,8BAXP,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,MAEhBC,IAFgB,GAEPD,KAFO,CAEhBC,IAFgB;AAIxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;;AAJwB,kBAMIb,QAAQ,CAAC,EAAD,CANZ;AAAA,MAMjBgB,MANiB;AAAA,MAMTC,SANS;;AAAA,mBAOcjB,QAAQ,CAAC,EAAD,CAPtB;AAAA,MAOjBkB,WAPiB;AAAA,MAOJC,cAPI;;AASxB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,cAAc,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAd;AACD,GAHD;;AAKA,SACE,4BACE,uBADF,CADF;AAoCD,CAlDD;;AAoDA,eAAeb,MAAf,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA",
    "sourcesContent": [
      "import react, { useState } from \"react\";\n// import _ from \"lodash\";\nimport {\n  getCheckoutMethod,\n  getDeliveryDates,\n  getDeliveryTimes,\n  getPickupTimes,\n  getOrderName,\n  getFulFillmentStatus,\n  getCustomerFullName,\n  getCustomerEmail,\n  getCustomerNote,\n  getOrderCreationTime,\n} from \"../utils/getCustomAttributes\";\n\n// const ORDER_UPDATE = gql`\n//   mutation orderUpdate($input: OrderInput!) {\n//     orderUpdate(input: $input) {\n//       order {\n//         id\n//       }\n//       userErrors {\n//         field\n//         message\n//       }\n//     }\n//   }\n// `;\n\nconst Orders = (props) => {\n\n  const { data } = props\n\n  console.log(\"Orders Edge\", data)\n\n  const [method, setMethod] = useState(\"\");\n  const [orderStatus, setOrderStatus] = useState(\"\");\n\n  const handleStatus = (e) => {\n    e.preventDefault();\n    setOrderStatus(e.target.value);\n  };\n\n  return (\n    <>\n      <h1>hi</h1>\n      {/* {getCheckoutMethod(edge) === method && (\n        <div\n          className=\"border p-2 w-1/3 flex content-center\"\n        >\n          <div className=\"flex w-2/3 p-2 flex-col\">\n            <h2>Order Name: {getOrderName(edge)}</h2>\n            <h4>Status: {getFulFillmentStatus(edge)}</h4>\n            <h2>Method: {getCheckoutMethod(edge)}</h2>\n            <h3>Customer Name: {getCustomerFullName(edge)}</h3>\n            <h3>Customer Email: {getCustomerEmail(edge)}</h3>\n            {edge.node.note && <h4>Customer Note: {getCustomerNote(edge)}</h4>}\n            <h4>Due Date: {getDeliveryDates(edge)}</h4>\n            <h4>Due Time: {getDeliveryTimes(edge)}</h4>\n          </div>\n          <div>\n            <label for=\"order-status-select\">Update Status:</label>\n\n            <select\n              name=\"status\"\n              value={orderStatus}\n              onChange={(e) => handleStatus(e)}\n            >\n              <option value=\"\">--Status--</option>\n              <option value=\"null\">Cancelled</option>\n              <option value=\"prep\">In Prep</option>\n              <option value=\"ready\">Ready</option>\n              <option value=\"notified\">Customer Notified</option>\n            </select>\n          </div>\n        </div>\n      )} */}\n    </>\n  );\n};\n\nexport default Orders;\n\n// let input;\n// const [orderUpdate, { data }] = useMutation(ORDER_UPDATE);\n\n// e.preventDefault();\n// orderUpdate({ variables: { input: input.value } });\n// input.value = \"\";\n\n// // Local State\n// const [timeStampArray, setTimeStampArray] = useState([]);\n// // const [orderedArray, setOrderedArray] = useState([]);\n\n// useEffect(() => {\n//   const dateTimeArray = [];\n//   if(data !== undefined) {\n//     data.orders.edges.map(edge => {\n//       const deliveryDate = getDeliveryDates(edge);\n//       const deliveryTime = getDeliveryTimes(edge);\n\n//       if(deliveryTime !== undefined) {\n//         const processTimesArray = deliveryTime.split(' ');\n//         const deliveryWindowParse = processTimesArray.slice(0, 2)\n//         const deliveryDueTime = deliveryWindowParse.join(' ')\n\n//         dateTimeArray.push(new Date(`${deliveryDate} ${deliveryDueTime}`).toISOString())\n//       }\n//       dateTimeArray.sort();\n//       setTimeStampArray(dateTimeArray)\n//     })\n//   }\n// }, [method])\n\n// useEffect(() => {\n//   // setOrderedArray(orderedArray => [...orderedArray, timeStampArray])\n//   console.log(\"timestamparray\", timeStampArray)\n// }, [timeStampArray])\n// // console.log(\"ordered Array\", orderedArray)\n\n// const updateStatus = () => {\n//   console.log('hi')\n// }\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}

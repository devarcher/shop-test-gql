{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Orders from \"./Orders\";\nimport { useQuery, useMutation } from \"react-apollo\";\nimport { GET_ORDERS, REMOVE_ORDER_TAGS } from \"../queries/queries\";\nimport { getCheckoutMethod } from \"../utils/getCustomAttributes\";\n\nvar GetOrders = function GetOrders() {\n  // Apollo data\n  var _useQuery = useQuery(GET_ORDERS, {\n    pollInterval: 5000\n  }),\n      data = _useQuery.data;\n\n  var _useMutation = useMutation(REMOVE_ORDER_TAGS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      removeOrderTags = _useMutation2[0];\n\n  console.log(\"Get Orders\", data);\n\n  var synchTagsWithCustomAttributes = function synchTagsWithCustomAttributes() {};\n\n  if (data && data !== undefined) {\n    data.orders.edges.map(function (edge) {\n      var tagsPickupMethod = edge.node.tags.find(function (method) {\n        return method === \"Pickup Order\";\n      });\n      var tagsDeliveryMethod = edge.node.tags.find(function (method) {\n        return method === \"Local Delivery Order\";\n      });\n\n      if (getCheckoutMethod(edge) === \"delivery\" && tagsPickupMethod !== undefined) {\n        removeOrderTags({\n          variables: {\n            id: edge.node.id,\n            tags: \"Pickup Order\"\n          }\n        });\n      } else if (getCheckoutMethod(edge) === \"pickup\" && tagsDeliveryMethod !== undefined) {\n        removeOrderTags({\n          variables: {\n            id: edge.node.id,\n            tags: \"Local Delivery Order\"\n          }\n        });\n      } else {\n        return null;\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Orders, {\n    data: data\n  }));\n};\n\nexport default GetOrders;","map":{"version":3,"sources":["/home/kiro/Documents/Gemini/shopify-Test/shopify-test-setup/components/GetOrders.js"],"names":["Orders","useQuery","useMutation","GET_ORDERS","REMOVE_ORDER_TAGS","getCheckoutMethod","GetOrders","pollInterval","data","removeOrderTags","console","log","synchTagsWithCustomAttributes","undefined","orders","edges","map","edge","tagsPickupMethod","node","tags","find","method","tagsDeliveryMethod","variables","id"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,oBAA9C;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB;AADsB,kBAELL,QAAQ,CAACE,UAAD,EAAa;AACpCI,IAAAA,YAAY,EAAE;AADsB,GAAb,CAFH;AAAA,MAEdC,IAFc,aAEdA,IAFc;;AAAA,qBAMIN,WAAW,CAACE,iBAAD,CANf;AAAA;AAAA,MAMfK,eANe;;AAQtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B;;AAEA,MAAMI,6BAA6B,GAAG,SAAhCA,6BAAgC,GAAM,CAE3C,CAFD;;AAIA,MAAIJ,IAAI,IAAIA,IAAI,KAAKK,SAArB,EAAgC;AAC9BL,IAAAA,IAAI,CAACM,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsB,UAACC,IAAD,EAAU;AAC9B,UAAMC,gBAAgB,GAAGD,IAAI,CAACE,IAAL,CAAUC,IAAV,CAAeC,IAAf,CACvB,UAACC,MAAD;AAAA,eAAYA,MAAM,KAAK,cAAvB;AAAA,OADuB,CAAzB;AAGA,UAAMC,kBAAkB,GAAGN,IAAI,CAACE,IAAL,CAAUC,IAAV,CAAeC,IAAf,CACzB,UAACC,MAAD;AAAA,eAAYA,MAAM,KAAK,sBAAvB;AAAA,OADyB,CAA3B;;AAIA,UACEjB,iBAAiB,CAACY,IAAD,CAAjB,KAA4B,UAA5B,IACAC,gBAAgB,KAAKL,SAFvB,EAGE;AACAJ,QAAAA,eAAe,CAAC;AACde,UAAAA,SAAS,EAAE;AACTC,YAAAA,EAAE,EAAER,IAAI,CAACE,IAAL,CAAUM,EADL;AAETL,YAAAA,IAAI,EAAE;AAFG;AADG,SAAD,CAAf;AAMD,OAVD,MAUO,IACLf,iBAAiB,CAACY,IAAD,CAAjB,KAA4B,QAA5B,IACAM,kBAAkB,KAAKV,SAFlB,EAGL;AACAJ,QAAAA,eAAe,CAAC;AACde,UAAAA,SAAS,EAAE;AACTC,YAAAA,EAAE,EAAER,IAAI,CAACE,IAAL,CAAUM,EADL;AAETL,YAAAA,IAAI,EAAE;AAFG;AADG,SAAD,CAAf;AAMD,OAVM,MAUA;AACL,eAAO,IAAP;AACD;AACF,KA/BD;AAgCD;;AAED,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEZ;AAAd,IADF,CADF;AAKD,CAtDD;;AAwDA,eAAeF,SAAf","sourcesContent":["import Orders from \"./Orders\";\nimport { useQuery, useMutation } from \"react-apollo\";\nimport { GET_ORDERS, REMOVE_ORDER_TAGS } from \"../queries/queries\";\nimport { getCheckoutMethod } from \"../utils/getCustomAttributes\";\n\nconst GetOrders = () => {\n  // Apollo data\n  const { data } = useQuery(GET_ORDERS, {\n    pollInterval: 5000,\n  });\n\n  const [removeOrderTags] = useMutation(REMOVE_ORDER_TAGS);\n\n  console.log(\"Get Orders\", data);\n\n  const synchTagsWithCustomAttributes = () => {\n\n  }\n\n  if (data && data !== undefined) {\n    data.orders.edges.map((edge) => {\n      const tagsPickupMethod = edge.node.tags.find(\n        (method) => method === \"Pickup Order\"\n      );\n      const tagsDeliveryMethod = edge.node.tags.find(\n        (method) => method === \"Local Delivery Order\"\n      );\n\n      if (\n        getCheckoutMethod(edge) === \"delivery\" &&\n        tagsPickupMethod !== undefined\n      ) {\n        removeOrderTags({\n          variables: {\n            id: edge.node.id,\n            tags: \"Pickup Order\",\n          },\n        });\n      } else if (\n        getCheckoutMethod(edge) === \"pickup\" &&\n        tagsDeliveryMethod !== undefined\n      ) {\n        removeOrderTags({\n          variables: {\n            id: edge.node.id,\n            tags: \"Local Delivery Order\",\n          },\n        });\n      } else {\n        return null;\n      }\n    });\n  }\n\n  return (\n    <>\n      <Orders data={data} />\n    </>\n  );\n};\n\nexport default GetOrders;\n"]},"metadata":{},"sourceType":"module"}